{"version":3,"sources":["ml.js","trainedNet.js","App.js","serviceWorker.js","index.js"],"names":["boardMapping","null","X","O","decideTurn","board","console","log","normelisedBoard","map","val","i","input","result","Math","exp","emptySpaces","space","index","filter","response","indexOf","sort","a","b","rows","Board","props","row","className","key","id","onClick","squares","calculateWinner","lines","length","c","Game","state","history","Array","fill","stepNumber","xIsNext","this","slice","setState","concat","handleClick","step","status","current","winner","moves","move","desc","jumpTo","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.df108420.chunk.js","sourcesContent":["import trainedNet from \"./trainedNet\";\n\nconst boardMapping = {\n  null: 0,\n  X: 1,\n  O: -1,\n};\n\nconst decideTurn = (board) => {\n  console.log(\"--¯_(ツ)_/¯-----------board----------\", board);\n  //   const normelisedBoard = {};\n  //   board.forEach((val, i) => {\n  //     normelisedBoard[i] = boardMapping[`${val}`];\n  //   });\n  const normelisedBoard = board.map((val, i) => boardMapping[`${val}`]);\n  console.log(\n    \"--¯_(ツ)_/¯-----------normelisedBoard----------\",\n    normelisedBoard\n  );\n\n  //   const options = [];\n  //   let probability;\n  //   normelisedBoard.forEach((val, position) => {\n  //     if (val !== 0) {\n  //       return;\n  //     }\n  //     probability = network.run({ board: normelisedBoard, position });\n  //     console.log(\"--¯_(ツ)_/¯-----------probability----------\", probability);\n  //     options.push({ position, probability });\n  //   });\n\n  //   console.log(\"--¯_(ツ)_/¯-----------options----------\", options);\n  const result = trainedNet(normelisedBoard);\n  console.log(\"--¯_(ツ)_/¯-----------result----------\", result);\n  const emptySpaces = normelisedBoard\n    .map((space, index) => {\n      return space === 0 ? result[index] : null;\n    })\n    .filter((space) => {\n      return space !== null;\n    });\n  console.log(\"--¯_(ツ)_/¯-----------emptySpaces----------\", emptySpaces);\n  const response = {\n    index: result.indexOf(\n      emptySpaces.sort(function (a, b) {\n        return b - a;\n      })[0]\n    ),\n  };\n  console.log(\"--¯_(ツ)_/¯-----------response----------\", response);\n  //   const probability = network.run(normelisedBoard);\n  //   console.log(\"--¯_(ツ)_/¯-----------probability----------\", probability);\n  //   console.log(\n  //     \"--¯_(ツ)_/¯-----------parseInt(res * 10000000) - 999999----------\",\n  //     parseInt(res * 10000000) - 999999\n  //   );\n  //   console.log(\n  //     \"--¯_(ツ)_/¯-----------parseInt(res * 10) + 1----------\",\n  //     parseInt(res * 10) + 1\n  //   );\n\n  //   const likely = brain.likely(normelisedBoard, network);\n  //   console.log(\"--¯_(ツ)_/¯-----------likely----------\", likely);\n  return response.index;\n};\n\nexport default decideTurn;\n","export default function anonymous(input\n) {\nreturn [1/(1+1/Math.exp((-3.247140407562256+26.928964614868164*1/(1+1/Math.exp((-16.751493453979492-2.3545093536376953*(input['0']||0)-0.9729959964752197*(input['1']||0)+12.574928283691406*(input['2']||0)-2.420008420944214*(input['3']||0)-7.305737495422363*(input['4']||0)-3.8215792179107666*(input['5']||0)-10.58191204071045*(input['6']||0)+0.4306272864341736*(input['7']||0)-3.9384353160858154*(input['8']||0))))-18.5376033782959*1/(1+1/Math.exp((8.50502872467041-9.131753921508789*(input['0']||0)-25.554546356201172*(input['1']||0)+6.119822978973389*(input['2']||0)-4.437882423400879*(input['3']||0)-1.0654751062393188*(input['4']||0)+8.250267028808594*(input['5']||0)+34.89117431640625*(input['6']||0)+3.150977611541748*(input['7']||0)-3.0175182819366455*(input['8']||0))))-27.00368309020996*1/(1+1/Math.exp((-0.1177128329873085-25.972686767578125*(input['0']||0)-10.053315162658691*(input['1']||0)+6.964378833770752*(input['2']||0)+9.006750106811523*(input['3']||0)+0.18926475942134857*(input['4']||0)+10.217118263244629*(input['5']||0)+10.834253311157227*(input['6']||0)-10.317357063293457*(input['7']||0)+8.939681053161621*(input['8']||0))))))),1/(1+1/Math.exp((-3.5054197311401367+2.1451616287231445*1/(1+1/Math.exp((-16.751493453979492-2.3545093536376953*(input['0']||0)-0.9729959964752197*(input['1']||0)+12.574928283691406*(input['2']||0)-2.420008420944214*(input['3']||0)-7.305737495422363*(input['4']||0)-3.8215792179107666*(input['5']||0)-10.58191204071045*(input['6']||0)+0.4306272864341736*(input['7']||0)-3.9384353160858154*(input['8']||0))))+3.925179958343506*1/(1+1/Math.exp((8.50502872467041-9.131753921508789*(input['0']||0)-25.554546356201172*(input['1']||0)+6.119822978973389*(input['2']||0)-4.437882423400879*(input['3']||0)-1.0654751062393188*(input['4']||0)+8.250267028808594*(input['5']||0)+34.89117431640625*(input['6']||0)+3.150977611541748*(input['7']||0)-3.0175182819366455*(input['8']||0))))-52.05187225341797*1/(1+1/Math.exp((-0.1177128329873085-25.972686767578125*(input['0']||0)-10.053315162658691*(input['1']||0)+6.964378833770752*(input['2']||0)+9.006750106811523*(input['3']||0)+0.18926475942134857*(input['4']||0)+10.217118263244629*(input['5']||0)+10.834253311157227*(input['6']||0)-10.317357063293457*(input['7']||0)+8.939681053161621*(input['8']||0))))))),1/(1+1/Math.exp((0.7351791262626648-20.119441986083984*1/(1+1/Math.exp((-16.751493453979492-2.3545093536376953*(input['0']||0)-0.9729959964752197*(input['1']||0)+12.574928283691406*(input['2']||0)-2.420008420944214*(input['3']||0)-7.305737495422363*(input['4']||0)-3.8215792179107666*(input['5']||0)-10.58191204071045*(input['6']||0)+0.4306272864341736*(input['7']||0)-3.9384353160858154*(input['8']||0))))-30.050031661987305*1/(1+1/Math.exp((8.50502872467041-9.131753921508789*(input['0']||0)-25.554546356201172*(input['1']||0)+6.119822978973389*(input['2']||0)-4.437882423400879*(input['3']||0)-1.0654751062393188*(input['4']||0)+8.250267028808594*(input['5']||0)+34.89117431640625*(input['6']||0)+3.150977611541748*(input['7']||0)-3.0175182819366455*(input['8']||0))))+9.458170890808105*1/(1+1/Math.exp((-0.1177128329873085-25.972686767578125*(input['0']||0)-10.053315162658691*(input['1']||0)+6.964378833770752*(input['2']||0)+9.006750106811523*(input['3']||0)+0.18926475942134857*(input['4']||0)+10.217118263244629*(input['5']||0)+10.834253311157227*(input['6']||0)-10.317357063293457*(input['7']||0)+8.939681053161621*(input['8']||0))))))),1/(1+1/Math.exp((-18.930078506469727+17.08191680908203*1/(1+1/Math.exp((-16.751493453979492-2.3545093536376953*(input['0']||0)-0.9729959964752197*(input['1']||0)+12.574928283691406*(input['2']||0)-2.420008420944214*(input['3']||0)-7.305737495422363*(input['4']||0)-3.8215792179107666*(input['5']||0)-10.58191204071045*(input['6']||0)+0.4306272864341736*(input['7']||0)-3.9384353160858154*(input['8']||0))))-6.9742913246154785*1/(1+1/Math.exp((8.50502872467041-9.131753921508789*(input['0']||0)-25.554546356201172*(input['1']||0)+6.119822978973389*(input['2']||0)-4.437882423400879*(input['3']||0)-1.0654751062393188*(input['4']||0)+8.250267028808594*(input['5']||0)+34.89117431640625*(input['6']||0)+3.150977611541748*(input['7']||0)-3.0175182819366455*(input['8']||0))))+4.917356491088867*1/(1+1/Math.exp((-0.1177128329873085-25.972686767578125*(input['0']||0)-10.053315162658691*(input['1']||0)+6.964378833770752*(input['2']||0)+9.006750106811523*(input['3']||0)+0.18926475942134857*(input['4']||0)+10.217118263244629*(input['5']||0)+10.834253311157227*(input['6']||0)-10.317357063293457*(input['7']||0)+8.939681053161621*(input['8']||0))))))),1/(1+1/Math.exp((-19.47603416442871-21.413124084472656*1/(1+1/Math.exp((-16.751493453979492-2.3545093536376953*(input['0']||0)-0.9729959964752197*(input['1']||0)+12.574928283691406*(input['2']||0)-2.420008420944214*(input['3']||0)-7.305737495422363*(input['4']||0)-3.8215792179107666*(input['5']||0)-10.58191204071045*(input['6']||0)+0.4306272864341736*(input['7']||0)-3.9384353160858154*(input['8']||0))))+6.144951820373535*1/(1+1/Math.exp((8.50502872467041-9.131753921508789*(input['0']||0)-25.554546356201172*(input['1']||0)+6.119822978973389*(input['2']||0)-4.437882423400879*(input['3']||0)-1.0654751062393188*(input['4']||0)+8.250267028808594*(input['5']||0)+34.89117431640625*(input['6']||0)+3.150977611541748*(input['7']||0)-3.0175182819366455*(input['8']||0))))+14.015583992004395*1/(1+1/Math.exp((-0.1177128329873085-25.972686767578125*(input['0']||0)-10.053315162658691*(input['1']||0)+6.964378833770752*(input['2']||0)+9.006750106811523*(input['3']||0)+0.18926475942134857*(input['4']||0)+10.217118263244629*(input['5']||0)+10.834253311157227*(input['6']||0)-10.317357063293457*(input['7']||0)+8.939681053161621*(input['8']||0))))))),1/(1+1/Math.exp((-8.898679733276367-17.440731048583984*1/(1+1/Math.exp((-16.751493453979492-2.3545093536376953*(input['0']||0)-0.9729959964752197*(input['1']||0)+12.574928283691406*(input['2']||0)-2.420008420944214*(input['3']||0)-7.305737495422363*(input['4']||0)-3.8215792179107666*(input['5']||0)-10.58191204071045*(input['6']||0)+0.4306272864341736*(input['7']||0)-3.9384353160858154*(input['8']||0))))-19.113983154296875*1/(1+1/Math.exp((8.50502872467041-9.131753921508789*(input['0']||0)-25.554546356201172*(input['1']||0)+6.119822978973389*(input['2']||0)-4.437882423400879*(input['3']||0)-1.0654751062393188*(input['4']||0)+8.250267028808594*(input['5']||0)+34.89117431640625*(input['6']||0)+3.150977611541748*(input['7']||0)-3.0175182819366455*(input['8']||0))))+23.419546127319336*1/(1+1/Math.exp((-0.1177128329873085-25.972686767578125*(input['0']||0)-10.053315162658691*(input['1']||0)+6.964378833770752*(input['2']||0)+9.006750106811523*(input['3']||0)+0.18926475942134857*(input['4']||0)+10.217118263244629*(input['5']||0)+10.834253311157227*(input['6']||0)-10.317357063293457*(input['7']||0)+8.939681053161621*(input['8']||0))))))),1/(1+1/Math.exp((-26.188627243041992-8.052660942077637*1/(1+1/Math.exp((-16.751493453979492-2.3545093536376953*(input['0']||0)-0.9729959964752197*(input['1']||0)+12.574928283691406*(input['2']||0)-2.420008420944214*(input['3']||0)-7.305737495422363*(input['4']||0)-3.8215792179107666*(input['5']||0)-10.58191204071045*(input['6']||0)+0.4306272864341736*(input['7']||0)-3.9384353160858154*(input['8']||0))))+27.160062789916992*1/(1+1/Math.exp((8.50502872467041-9.131753921508789*(input['0']||0)-25.554546356201172*(input['1']||0)+6.119822978973389*(input['2']||0)-4.437882423400879*(input['3']||0)-1.0654751062393188*(input['4']||0)+8.250267028808594*(input['5']||0)+34.89117431640625*(input['6']||0)+3.150977611541748*(input['7']||0)-3.0175182819366455*(input['8']||0))))-4.066576957702637*1/(1+1/Math.exp((-0.1177128329873085-25.972686767578125*(input['0']||0)-10.053315162658691*(input['1']||0)+6.964378833770752*(input['2']||0)+9.006750106811523*(input['3']||0)+0.18926475942134857*(input['4']||0)+10.217118263244629*(input['5']||0)+10.834253311157227*(input['6']||0)-10.317357063293457*(input['7']||0)+8.939681053161621*(input['8']||0))))))),1/(1+1/Math.exp((-0.15679588913917542-12.819040298461914*1/(1+1/Math.exp((-16.751493453979492-2.3545093536376953*(input['0']||0)-0.9729959964752197*(input['1']||0)+12.574928283691406*(input['2']||0)-2.420008420944214*(input['3']||0)-7.305737495422363*(input['4']||0)-3.8215792179107666*(input['5']||0)-10.58191204071045*(input['6']||0)+0.4306272864341736*(input['7']||0)-3.9384353160858154*(input['8']||0))))-3.8015363216400146*1/(1+1/Math.exp((8.50502872467041-9.131753921508789*(input['0']||0)-25.554546356201172*(input['1']||0)+6.119822978973389*(input['2']||0)-4.437882423400879*(input['3']||0)-1.0654751062393188*(input['4']||0)+8.250267028808594*(input['5']||0)+34.89117431640625*(input['6']||0)+3.150977611541748*(input['7']||0)-3.0175182819366455*(input['8']||0))))-18.18541145324707*1/(1+1/Math.exp((-0.1177128329873085-25.972686767578125*(input['0']||0)-10.053315162658691*(input['1']||0)+6.964378833770752*(input['2']||0)+9.006750106811523*(input['3']||0)+0.18926475942134857*(input['4']||0)+10.217118263244629*(input['5']||0)+10.834253311157227*(input['6']||0)-10.317357063293457*(input['7']||0)+8.939681053161621*(input['8']||0))))))),1/(1+1/Math.exp((-29.09583854675293+12.08004093170166*1/(1+1/Math.exp((-16.751493453979492-2.3545093536376953*(input['0']||0)-0.9729959964752197*(input['1']||0)+12.574928283691406*(input['2']||0)-2.420008420944214*(input['3']||0)-7.305737495422363*(input['4']||0)-3.8215792179107666*(input['5']||0)-10.58191204071045*(input['6']||0)+0.4306272864341736*(input['7']||0)-3.9384353160858154*(input['8']||0))))+13.05495834350586*1/(1+1/Math.exp((8.50502872467041-9.131753921508789*(input['0']||0)-25.554546356201172*(input['1']||0)+6.119822978973389*(input['2']||0)-4.437882423400879*(input['3']||0)-1.0654751062393188*(input['4']||0)+8.250267028808594*(input['5']||0)+34.89117431640625*(input['6']||0)+3.150977611541748*(input['7']||0)-3.0175182819366455*(input['8']||0))))+13.51803970336914*1/(1+1/Math.exp((-0.1177128329873085-25.972686767578125*(input['0']||0)-10.053315162658691*(input['1']||0)+6.964378833770752*(input['2']||0)+9.006750106811523*(input['3']||0)+0.18926475942134857*(input['4']||0)+10.217118263244629*(input['5']||0)+10.834253311157227*(input['6']||0)-10.317357063293457*(input['7']||0)+8.939681053161621*(input['8']||0)))))))];\n};","import React from \"react\";\nimport decideTurn from \"./ml\";\n\nconst rows = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n];\nconst Board = (props) => {\n  return (\n    <div>\n      {rows.map((row, i) => (\n        <div className=\"board-row\" key={i}>\n          {row.map((id) => (\n            <button\n              key={id}\n              className=\"square\"\n              onClick={() => props.onClick(id)}\n            >\n              {props.squares[id]}\n            </button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n        },\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState(\n      {\n        history: history.concat([\n          {\n            squares: squares,\n          },\n        ]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext,\n      },\n      () => {\n        if (!this.state.xIsNext) {\n          const { history } = this.state;\n          const index = decideTurn(history[history.length - 1].squares);\n          this.handleClick(index);\n        }\n      }\n    );\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}